{"version":3,"sources":["portfolio/hub.png","portfolio/Portfolio.js","App.js","index.js"],"names":["Portfolio","typedStrings","skillsJSON","projectsJSON","Navbar","id","bg","expand","sticky","Container","Brand","href","Toggle","Collapse","Nav","className","Link","target","Row","Col","Image","src","width","height","strings","this","typeSpeed","backSpeed","loop","Button","variant","size","Tabs","defaultActiveKey","Object","keys","map","key","Tab","eventKey","title","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","xs","md","keyDict","link","console","log","Card","Img","as","Body","Title","Text","Footer","sm","project","Item","Content","Pane","Badge","text","hub","Form","Group","controlId","Label","Control","type","rows","React","Component","PortfolioApp","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2182df04.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hub.12958a61.png\";","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Navbar, Container, Nav, NavDropdown, Col,\n  Image, Row, Button, Card, Tab, Tabs, Badge,\n  Stack, Form\n} from 'react-bootstrap';\nimport Typed from 'react-typed';\n\nimport \"./Portfolio.css\";\nimport skillsJSON from \"./skills.json\";\nimport projectsJSON from \"./projects.json\"\nimport hub from './hub.png';\n\n// https://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript\nfunction toTitleCase(str) {\n  return str.replace(\n    /\\w\\S*/g,\n    function(txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    }\n  );\n}\n\nconst completeBadge = () => {\n  return <Badge bg=\"success\"> Complete </Badge>\n}\n\nconst workInProgressBadge = () => {\n  return <Badge bg=\"warning\" text=\"dark\"> Work In Progress </Badge>\n}\n\nclass Portfolio extends React.Component {\n  constructor() {\n    super();\n    this.typedStrings = [\n      \"Full Stack Freelance Programmer\",\n      \"Undergraduate At Ryerson University\",\n      \"Artificial Intelligence Enthusiast\",\n      \"Currently Seeking Work!\"\n    ];\n\n    this.skillsJSON = skillsJSON;\n    this.projectsJSON = projectsJSON;\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar id=\"nav\" bg=\"light\" expand=\"lg\" sticky=\"top\">\n          <Container>\n            <Navbar.Brand href=\"#home\">Thanussian Sharvananthan</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse>\n              <Nav className=\"me-auto\">\n                <Nav.Link>Skills</Nav.Link>\n                <Nav.Link>Projects</Nav.Link>\n                <Nav.Link>Experience</Nav.Link>\n                <Nav.Link>Contact</Nav.Link>\n                <Nav.Link href=\"https://than.hashnode.dev\" target=\"blank\">Blog</Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        <header id=\"header\" className=\"d-flex justify-content-md-center align-items-center vh-100\">\n          <Container>\n            <Row>\n              <Col>\n                <Image src=\"https://github.com/TSharvananthan.png\" width={500} height={500} />\n              </Col>\n\n              <Col className=\"mx-auto my-5\">\n                <h1> Thanussian Sharvananthan </h1>\n                <Typed strings={this.typedStrings} typeSpeed={20} backSpeed={20} loop />\n                <br />\n                <Button variant=\"primary\" className=\"mt-5\" size=\"lg\">See More</Button>\n              </Col>\n            </Row>\n          </Container>\n        </header>\n\n        <br />\n        <br />\n\n        <section id=\"skills\">\n          <h1 className=\"text-center\"> Skills </h1>\n          <Container>\n            <Tabs defaultActiveKey={Object.keys(this.skillsJSON)[0]} id=\"uncontrolled-tab-example\" className=\"mb-3\">\n              {\n                Object.keys(this.skillsJSON).map(key => {\n                  return (\n                    <Tab eventKey={key} title={toTitleCase(key)}>\n                      {\n                        <Row xs={1} md={3} className=\"g-5\">\n                          {\n                            this.skillsJSON[key].map((keyDict) => {\n                              let link = keyDict[\"imageLink\"];\n                              console.log(link);\n                              return (\n                                <Col>\n                                  <Card>\n                                    <Card.Img variant=\"top\" as={Image} src={link} />\n                                    <Card.Body>\n                                      <Card.Title>{keyDict[\"technology\"]}</Card.Title>\n                                      <Card.Text>{keyDict[\"description\"]}</Card.Text>\n                                    </Card.Body>\n                                  </Card>\n                                  <Card.Footer>\n                                    <small className=\"text-muted\">{keyDict[\"duration\"]}</small>\n                                  </Card.Footer>\n                                </Col>\n                              )\n                            })\n                          }\n                        </Row>\n                      }\n                    </Tab>\n                  )\n                })\n              }\n            </Tabs>\n          </Container>\n        </section>\n\n        <br />\n        <br />\n\n        <section id=\"projects\">\n          <h1 className=\"text-center\">Projects</h1>\n          <Container className=\"mt-3\">\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={this.projectsJSON[0][\"name\"]}>\n              <Row>\n                <Col sm={3}>\n                  <Nav variant=\"pills\" className=\"flex-column\">\n                    {\n                      this.projectsJSON.map(project => {\n                        return (\n                          <Nav.Item> <Nav.Link eventKey={ project[\"name\"] }> { project[\"name\"] } </Nav.Link> </Nav.Item>\n                        )\n                      })\n                    }\n                  </Nav>\n                </Col>\n\n                <Col>\n                  <Tab.Content>\n                    {\n                      this.projectsJSON.map(project => {\n                        return (\n                          <Tab.Pane eventKey={ project[\"name\"] }>\n                            <p> Technologies Used: <i> { project[\"depandancies\"] } </i> </p>\n                            <a href={ project[\"github\"] } target=\"blank\"> Github </a>\n                            <br />\n                            { project[\"isWorkInProgress\"] ? workInProgressBadge() : completeBadge() }\n                            <br /> <br />\n                            <p> { project[\"description\"] } </p>\n                          </Tab.Pane>\n                        )\n                      })\n                    }\n                  </Tab.Content>\n                </Col>\n              </Row>\n            </Tab.Container>\n          </Container>\n        </section>\n\n        <br />\n        <br />\n\n        <section id=\"experience\">\n          <h1 className=\"text-center\">Experience</h1>\n          <Container className=\"mt-3\">\n            <Row className=\"align-items-center\">\n              <Col> <img src={hub} width={900} /> </Col>\n              <Col>\n                <p>\n                  Starting around December of 2020, a few peers and myself founded the Victoria Park Hub Code Camp. From the start, the mission statement was simple: <b> provide free coding education</b>. Sponsored and hosted by the <a href=\"https://www.centraleasthealthline.ca/displayservice.aspx?id=143120\" target=\"blank\">Working Women Community Centre</a>, we taught elements of Python and CS Theory/Competitive Programming to middle/high school students alike! I taught over 20 engaged and ecstatic students that wanted to get behind the scenes and enter the lives of a programmer. Nowadays, I oversee said class and maintain relations with various students.\n                </p>\n              </Col>\n            </Row>\n          </Container>\n        </section>\n\n        <br />\n        <br />\n\n        <section id=\"contact\">\n          <h1 className=\"text-center\">Contact Me</h1>\n          <Container className=\"mt-3\">\n            <Form>\n              <Row className=\"mb-3\">\n                <Form.Group as={Col} controlId=\"formName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control type=\"name\" />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formEmail\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"email\"  />\n                </Form.Group>\n              </Row>\n\n              <Form.Group className=\"mb-3\" controlId=\"formMessageTextField\">\n                <Form.Label>Your Message</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\" className=\"w-100\"> Submit </Button>\n            </Form>\n          </Container>\n        </section>\n\n        <br />\n        <br />\n      </div>\n    )\n  }\n}\n\nconst PortfolioApp = () => {\n  return (\n    <div>\n      <Portfolio />\n    </div>\n  )\n}\n\nexport default PortfolioApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route,  Link } from \"react-router-dom\";\n\nimport PortfolioApp from \"./portfolio/Portfolio.js\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Routes>\n          <Route exact path=\"/\" element={<PortfolioApp />} />\n        </Routes>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}